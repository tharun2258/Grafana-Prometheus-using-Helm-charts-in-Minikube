name: Setup Monitoring with Prometheus and Grafana

on:
  push:
    branches:
      - dev
    

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Install Minikube
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      # Step 3: Start Minikube (Create a local Kubernetes cluster)
      - name: Start Minikube
        run: |
          minikube start --driver=docker  # You can specify a different driver if needed, such as virtualbox or docker

      # Step 4: Set up kubectl to use Minikube
      - name: Set up kubectl
        run: |
          # Set an alias for Helm to use kubectl commands (just for convenience in this workflow)
          echo "alias helm='kubectl'" >> $GITHUB_ENV
          kubectl config use-context minikube  # This tells kubectl to use the Minikube cluster

      # Step 5: Set up Helm (Install a stable version)
      - name: Install Helm
        run: |
          curl https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz | tar -xz
          sudo mv linux-amd64/helm /usr/local/bin/helm


      # Step 7: Add Helm Repositories
      - name: Add Helm Repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update  # Ensure repositories are updated
          
  
      - name: Check Helm Version
        run: helm version


      # Step 7: Initialize Helm repositories (Ensure Helm repo is set up correctly)
      - name: Initialize Helm Repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update  # Ensure repositories are updated

      # Step 8: Deploy Prometheus using Helm
      - name: Deploy Prometheus on Kubernetes
        run: |
          mkdir -p /home/runner/.helm/repository  
          # Create the repository directory if it doesn't exist
          touch /home/runner/.helm/repository/repositories.yaml  # Create the repositories.yaml file
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          

      - name: List Helm Repository Directory
        run: |
          ls -la /home/runner/.helm/repository  # Check the contents of the repository directory

      # Step 9: Deploy Grafana using Helm
      - name: Deploy Grafana on Kubernetes
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
          

      

     
      
